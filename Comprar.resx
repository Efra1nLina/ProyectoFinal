<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="label5.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAIAAAACACAYAAADDPmHLAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAD
        rwAAA68BGB6xfQAAABl0RVh0U29mdHdhcmUAd3d3Lmlua3NjYXBlLm9yZ5vuPBoAABi7SURBVHhe7V15
        VBTXmjd5M2/2M+fMm/dmzrzZz5s5c86befNH5iXpalySZ0zoatz3fUncjRo1GmNMVYGAoOKOiLijggug
        cRf3xH2L4hYVFVFEENxAQLhzflV9m+pbTVNVXc2i9TvndxKprrq37vfVXb77fd9t0cKGDRs2bNiwYcOG
        DRs2bNiwYcOGDRs2bNiwYaORwfHCfzt4cY7TJV7geLGU48UijhdPO9xiXBgvvcP+3sZrgjZthD918uIS
        jherOV4kAfgj55a+eK/9jL9jn2GjmeKdCOHPnbx4lAq5dccZZNzX60nCkv1k9uJsMnpKqvw3RhEqOV7K
        ckQIHX/bTfg5+0wbzQhOl7CKCnbs1PUk50opeXC/2oc3brwgK1JPkv6jkllFAAs5lzg3zC39L/tsG00c
        DrfwLhXkF9PTSH7+K43wWZ48XUBmzt9N+N6zWUUAz3Eu6fM2EcLfsmXZaILgeGkjBNe2a6z8lbPCDsR7
        eVVk286rsuK0ah/FKkKFg5c2h7nFiDZthD9iy7XRBPBup+hfQFAQWPScnRoBG+H1n56TlLXHSZ8RSawi
        gAUcL87CCoOtg41GBLpqKqRjJ/I1QjXLU6cLSPyCvcTVaxarCMTBizkcL05uGR79S7Y+NhoYHC+egVDw
        1bJCtIL5916RXdk3yMRv0/0NES85t7TNwYvd3nkn6Y/ZutkIMdAdU2EkrzmmEZ7VxPxi9YbTpO+Ipawi
        gPc5tzDPXkU0IGDtQ+Pjy7x27ZlGYKEkVhEYIsL9DBEeq+NYexURQmBW7uTFB2jw8d+kaQTUUMzLqyTb
        dl1VhogOkawivHTyYrq9iggBYL2jDb115xWNYBqDl688kYei3sP9riLyMUQ4XNL/sO9iwwQ4XsxEw6IL
        zrtbpRFGY5MOER/3iGcVwTtEOD4W/oZ9Lxs6wLUTfqXY8UUSO2+3pvGbEvPu1g4RLdtrhohyOkR065b+
        M/Y9bdQBp1saThvx25lbm2QP4I85l0vJopQjpOuQhawigLcdvCCG8cK/s+9rg4EjQmotr8E9jTfw8xRy
        /XrDrgKC5YEjt8n02K3ko26xrCLUcC7xIOeSBrbpJvwl++42PHBECP/F8eJ+2nBYm9+8aWwfoCnwzp0K
        kp5xgYyYuJqEuSVWGZ5xvLACCt+iBXmLbQMbLchbnEuYTRsM+/9sAzcnYohYvPwI6TpoAasIhHOJdzle
        jLWHCD/geHEdbaiMbTmahm1uvJ9fTfYfyiXTZmSSP3SJYZWhmnNL2ZxL7AcnGLYt3khgrOR48R4aCGtw
        tkGbM3NzX5L1m8+Tz75YSZxuplfgxScOXlz2frjkZNvkjYPDJY6iDYMJFtuQrwMv/FhM5iYdIB0HzGMV
        Abzu5KWp74UL/8i2zRuBd9rG/jW1DcxbckDTeFaw4EE1KS6qJqUlNeTZ0xpS9qKGVLysIZWVhLx6pbC6
        mpCaGuW/8t+qiHwdvysrqyHPntWQJ6U15HFxDSl8qC1DL78/dk9eAn/YWTtEKL6R0tDftYv/C7adXmtw
        vPgDGmHU5LWaBjPDhwXVpLRUEXRVFQkJoChQjufPa0hJSY1cJluPQLx1q5ys3XiWDBm3wt8QUQIvaWe4
        8D7bVq8l6GQwGN+AR4XV8teNr7axAGV78byGPH5cI/c6bB3r4qWcEnkV0WngfFYRCOcWr3JuUeBcUf/C
        tttrA0yI8LJdBi/UNE4gopFLHteQiooaVhYBcTe/mCSuzCaRczLJui0/kGfPX7I/CRoYTsrLa+T66VUG
        OMXu2neDTJY2kzZaV/hXHC9thxNLePj8P2HbsFmDbhANHrtC0yj+iAZ98qRG7oaNYu+hS+SDTr6N23FA
        Arl3/zH7U8sgK0OZMn9g36Uu3rhRJjuxDBqTwioCWOx0iwudLuH/2LZsluB4MQ8v9lXUFk1DsMREDpM0
        M8jYcdprtXO6I8knXWu73PHfrGV/HhJgcvn0ibE5w5mzhWTWwr3E3WcOqwjgRY4XJzTbaKn32gu/oy+z
        ftM5zctTYuZttKtXY83Go97J1ocd40n0tLtkaWwV+WzoDvlvYRESKSuvYG8LGdArvHhhbEUBP8cde66T
        Sd9u9BctVeXghbRm5/3MucXVeIFWHaLIlatPNS8N4qtHg7HIvfuITIvZKHfhfUYsJpGzM8jm706Razce
        kFevlPEB9yWu3OdtqI86J5C46QWy8MHpk694r926U8gW0SDAaqWwUPvegUijpQaMXqZRBKdLHM+2c5OE
        gxc4VBgVF+K2aV4SxFfiD7l3Ckm77jPZl/fywy7RZOTklaT/6CXev33SZT6ZIzzyCh+MnXbPe/3k2Zts
        MSFB/KLtZN7SXaS62vfd8K5GhgZKOLHMmLPDd+Lolr5k27tJweGO+jXHi3dQWWytXrz02OelMNF7We5f
        +MCUyDT5RTGW9xu8hfQZuJG06zJXowiU7h5LyDypxEf44LzIUu9vdmRfYIuxHN+fvO4tL/+BduKJHuvp
        U/0rBzXPnitU+yxUI/SObfcmAY9b+G3aEGkZP2qEX1HPcMz3Ubx6Bw3J8hWoVEKmTbpEhg7bTbr1XUu6
        9llNxow+TBKjyzXCB5NiK2UlwrNWpx9li7Ecg8cpAa69RyxmL/kANgVYL1kh10eYnRFq52nbfWzbNyp+
        7xL+nuOFGTQkDFyUcljzElg/14ceQxVN794vVSNUo8S8AM9KSNrJFmMprv503/v1w/6gBxgWjPYGMKnX
        9gJRv2blEFJwvNSXc0m7OV5cjGQOCMVyuoUYaCO1+YMYr1atP6WpPEyrerB4hTKxc/KSz6TODDv1Xi4/
        q/+oJaSiIkS2Y0LIzAXb5HLghl5c8py9XCew7DXSGyA8jrazwy12YmUUMji6zfkzT2oXbwVYYik2aspa
        cvrsQ03FYTXTi0fFT0nrjkrIV//BWzRCNcKxY37w1q/nsIXk8LGrbHFBA0vMtl2VDaDJkRvYy7oAUzfb
        Zv6ImAdVm49h5RQyOFxSb1ow3Kqxtpb/v3uc7P83JzGbnDj1QFNhELNfo5a9mPlb5eeHRUSSBKlYI1i9
        XBJdQXr0X++jqFhB5Fy7xxZpGlt3nfU++8hx8woGW0h9KwUsEWlZTl4cwsopZOB4cQ8K7dB/rjfZg17P
        X6yFjeLuvSKvZQ8GHVawRpgUU0UmjT9D2naqtbaht5o+c5Oh7roufDZBMem6+8wiVVUGNZ0BhgRsfrFt
        SLl99zXvOzSY00lYhPDPNMlTQuJ+TaUCES9jFlOj0+UXbd0+ps6ZvhEuji4jo0YelJ9HGxGGpqLHz9ii
        deN23iPvsxam7GEvmwKWi3XtLcCk7imvtMGinzmXNI1+NefOF2kqFYhwuDCLoydqtT1m2j2NQM0S9oGB
        Q7K8z561eDtbtG6oLZEwYFkJWEnVbXnzZhn5oFO0Up5bSGblFCKQtzhe/AmFfjp+pUbAgQhbuD8zr17A
        xk8bl7XyWUE6N8AKwQxg7UMPgmdgGAgFsDNK23Nt+hlve8DSykoqJHDyUktaaOqmsxohByJmtmbxuOQ5
        adddMXp06LVMI7xgieEgoodiSjYrvBNnb3gFkrnzDHvZMsBdDe2JLXVPedcaLCaB44UUFAo/t9zcco2Q
        AzEYl63oecoqAMNO5NRcjQDNckHkU9l6+FEn5csF9RpuWAjxm+X7P+wcHRLHEzVyrhZ5dzydbvErVk4h
        ARwYOV58ikKnzsjQCDgQ0f2bxeXr+d4VQL9BmzVCNMP4bwvIoCFbSav2njHUQ+w7mJm5Q+DU+USctYW9
        bDmSVu+ndX7VYF7GDrfUnzbUvgM3NUIORDhTmgHmDHRZ1SoihsyVHmuEaYT44nsNSNM4Zw6ftJwc/OEK
        W7xuZO2qHY/PXMhlL1uK6prauQbHi7tYOdUJJGFG6BJMtZ4sWjcN8gl9Sfi9w7FRL7sMnk+6DjHOTgNr
        d/1aRswgH3eZFxQ/6BjnI3iwdYcoTbmBiG3nL6UNZH3GMVJS+kIWChQIz+oyeF5QE109UM81OF7qycpZ
        A3ljxiVlsC9uM3ii25+XvNvboyxfd4iVV1DA136/oIRcupJHLuTcIXfyimTHGE/5JUi+zcrbB++5I/+D
        7sWDcC8aPmGVHNOGoAWbxglP3t7Dap1PKDFPefCwlJWhKZw8d5NMi91Iwnv5zV4i0+ESEll5+8DZfuZf
        yb7mnhuiZu8wnKbVZt1E0ssBY2rdtAaNXcrK0TBu3n5IPv1C4/rlnxHS71mZ+4BzC5H0x8mrQ5+j703k
        3TsVZNjEVXIboweAH4BZbNtzzrvr6aEcNYTJd5hLeg9zOCcvdJYtsS6xHytvH8AujAfgQVaFYdn0T2Qe
        o/F/0uwMVq66ADd21cqknOPFr4MKLQ9zC22oJu3YfV1TaZvW8psYZS8BY7bRVcDFK3ne5FTIq2hJJlPs
        DVMFaI5pWfwRO4nYFaORv3ChgjOpHP1boUT4wtpIo4CrKj1RvxWEvETk7wtP5O8TJYwLzzPqglUX1Xb5
        0ifK0lAPKqteyUtLz71PkVaHlaUpOF3iJDousZVtDoRbFKJqIDQI0ehXZQRQFigSlKq42LhfHpi1ozbm
        wJ8HcF1QO484eXEAK0fTgK+4rAARzUMBih5Vyy7S+FKtFja8fTZkHicvyupxP1YBSvf8WQ0pLtKnEGoF
        MBJ72HdkonwPDHMtBOFtVo6m0RwUAEKHY6jZ+D+9GPGlsmuWuul79pIueAM+A0T/mlEA2Ay8X79bGs3K
        MCg0VQWAjxu62lALXQ1qTl6+PngrHXwZMfd49Mj3vcwowM7sC957HO2F37AyDApNTQGKiqrlr8jq7l0P
        6Ax75YbD7KWggMklNrnwfmYUYFXaEXpPheX7+U1FAdDNY5beWIDCUcGsTj/CXrYE6M12ZRtXgIXL9yr3
        uMWHrPyCRmMrAASPCV1jA3v7tQoQunAwxBcYVQBVD1Bp6QQQaCwFwCQJs2d/uHrjPknLOi4vfYLxvDUC
        RP9Qwaw1OQnUAzMKgABVeo/l2UUbQwFgpPE3ucOWJg3soMQ2avaRHPanlgNROrTM1M3mXL30wIwCYJuX
        3oMciqwMg0JDKgC++kDu3kjkoBa+Wgny7hezP7cUz56Xe8sz6+unB2YUAECyC899Fy0dBqgCgD2HJsqH
        NtQVqhUMYU4N5Oz5sqKKRPRVjn7tNXQmyb++hRw7lEpad1B8/MxunujFk6dlXsFsyDjGXg4K6NkOHbtC
        hPgt3hB2owoA72F6n4OXBrNyNA2kGKMPpsRuEw5vQq46VpBmiCVQfcs6jPm0/EP71pKqom0yo+MWyX9D
        D4Wwr1Dh6bPaHgDWQKsAtyzE/bNtjMTRz1/o9wjGHKXXMKUtHLz43NLzijyHNkzG8evqcO123ePId7uu
        aQRqhNhQqQ+Vla9Ih/5K/N2AkXGk8pEifPDetc3eXiAqIZO91TKoh4D0rBPsZcPAV79g2R4fp1JX73g5
        HBxbukb2ASjg7qU6quZRSLKGIrUY8s3RmD7ErcN4wQpWD/UGeGzadtLbSAf21H79lFEzlcQPci+QH5q5
        ANy1aR1Qn2CA3o7GJ4DY+oUTB3b0gsXuAxfVh1FUci5hZlD+AHXhfV5oS3374R9odF6A7VQ9QEx/+37K
        199/RLzP109598om0rK98tJfzUg35Y9fH9AdW6UA6tC0IeOS5WglK5F9OMfneBqkgmPlZwk4t+Sg5/kg
        dz9y0rGC9kckZWaBHbbzl+7IXwICIxHBC7dpuFrTF1GP/Sxj4pXxD0QmsKETUuS0rjDbokHUaeDMAPWj
        z9+y/RR7WTd+yi3wvhNiB43sLBoB0uHRniBkCgAgvxxtmI1ZFzXCZok1vhrlLytJ9NwsfydxeolxclFi
        kkboapbczSTDxvs92tXLT3rGmY61U9sBMEabxdfRiis2lq6hnLRiVUHri6PqWLlZBvgMOnjxFgqCZysr
        cDX9RfXSODg123aJJANHxpNp0nySnLyUXD6TrhG4P1Y82kb271lD5i5IJBO/nkt6fBpLWnkmiGoi969R
        lJXXplAxqwDYtqVfJXL+hRJIKeOpb0HIj7JVVgiK11Cgg53ZtK0FhaXeWfC4KQnk1NF1pODmFo1gg+HL
        h1vJncubyN6dq0nHforD5YAxST710AP0VMEqAO6jzwil4QpzClWPOouVl+VQ5+7N/M7/QU7+lnsIWqD3
        /Xhyg0Z4VnPJUuWcX3S/RgFDFK0rLJJmQHu7Hp8tYC9ZChiqaF0bJA8wctHLhyDyIklZe1wjfDhvsF0/
        gK+AVlSKWeh3hm8Vi3IzSPfBysy4voSL/qDeDDK7CkASKdyPeMBQwpvq1iWeZGUVMtAlIQ46YhWgrty9
        ABqDNiysehjHWeEFy8JbGaTv8Npgzm27z7LVqBcwRtH7N241ZwjqN0rx25uRkMVesgzYKaX1tHxjqC54
        gkfkHoCNHPI38VMDJlaEQtFKoyeoKNQK0SwLbmwhvT6rTRA9N8nc5AtGGvoMs5bA4ZMUn0I4cGL4gzXQ
        asxZspPW82WDnVjuOdpVLnhz1iXdXz8FrGxYt9NnYPaPyRsrTKPEhBIbR/S5wWTbgg2BPsfsXoAqGlcm
        fAyXrtlv2YQQShreU+npQrr2Z8G5pM/pS6k3iLC9qzeRIyxt9AsBo+IWagRqhLALdB9SK/wlq7LZIg0B
        iZvosxDPbwbqDS01sRKCx/F3e88FZRiCX4T3meFiOCun0EAQ3vYcQUJ6DUv0+fqNpHEFsNYeNUUJkARz
        TqdpBKuXScnKjB+0ItZe7RNo1h8AMfkqwX/vSZIp76lQ4swCHGJx9sfcgEMnC/RQWN56nnOnW7f0n7Gi
        CgnU6V7WpJ32UQA9GbxZIByK2gbWpaZoBKuXIyco+wcYWqwCfU+zcQHAuGlr6XNKnO2Ff2jVIeqfPPkS
        5ZR5aiJLSErqQdnjJxCgKMhaXnuvNJKVU0gQ5hL+k6Z7QfqWvLuVPgqgt/tXA0MBVYCNaSs0gtXL8V8p
        PvyjJq9kizANasULxifwQs7d2t06t5T9227Cz5XWJG+FRQhhnuxp8oqKEr8f/dUq2fcPvaQaMCerV1Ic
        Lx4KueUPgMMBx4v5cgUjJHLgcK6P8M1m80KEK32ZE4fXaQSrlwnzlSUXtlqtAt1rD9YrGH4AKoFlsse+
        4t+ennU/O0Qg7n/YxOXki+mp/hxJTnPthF+pn2U5ZKOP4ib2AoXia/WXw99sNi91liys31nB6mXmJsXo
        AlrlOUzNq8HGBWC2PlFYpxbcFYdb/APb1sD7nwj/yrnEb+l+Sx2s5FziXFaRLEOriMh/QxYpBy8s4Hix
        iBaMU7vWpJ3RCB9EgKYZYJ2OZ4f3nKERqhFeOF7bLWLNbQVo1g0rIoNgWGKXhfiCHS5pCnwtcEC2rxSU
        IcLJixISdTl5aS/HC2uwAgvpCR8OXvyYGnnU7DcqmRw7eV8jeEq9p3iw+Hzqavn5mMSxQgXv/7SFzF+0
        hAwdN5t8/mUC2bxxBSkr0NoMntzL8s4lzK7bWdAEjivWB68AFLBKwhWMbV8keAiJJ49RqL2C23adSSZM
        T9eVKcRMLn+g8yBl8hY3Z5GPQItuZ8qC/6Cjdnu384AYsjVjpcaC2Km/svs3O3EHW4wpIHUrnmfFslIN
        TOxgXYQdROXTZ32gpxmo4wLu5ek7yAE0swQEaJaL8VMTZCE+zc8iy1KWknbdaj2DMCse+/UatS+8zJ6f
        zpS3fbGpBIWh91i19w5PXTxvWepB9pJlOHD0ctNVAFbIgRgowCMQ1OvZroNifQQPThLXkxu5D+XfYv0L
        6xd1h6bsPDBGnkPQf586f4stxhSon13y2gPsJcugDgxp1grwwuQcAAEYKouWl7AQYonoD7CCwZdQnQ6W
        0qruH6Bp5pPX2ApQL5GXxyzgfIE9dzhQQIAwi+oBZtbb956Xo4QQQ4gTN63Exz2UvQVk2A4VXhsFMLoP
        0BwAp1K0RbAbS4Hw2iiAWUtgUwbNtwu39VDhtVEA0F+Id3MGDdzECaShwmulAHqcQZoTsDuHtrBXATqJ
        ZImvEzCpjFv4HSkqtmZvwR+anAJ4M4WaUADwdRsGQo0mpwAcLw2lFTJ6uhdodlPoTQWWsbS93+0U/QtW
        Hg0Oz2aQXKF9B29pBFwfzRzw/CYDdg9Pez+xPOefGeB4d2ScQKW+FDZqBKyHevMAvOlAEgrq1evkxXRW
        Fo0Gjhfny5Vyi2TzVl+3bz2Ed7A9FwgM7Gt8E7vJ2/1zLqEVK4dGQ8vw6F9S9y94xSSt/F73Ee+UbFi4
        jVogCYYqmpc43UIqK4NGh8MtvIujxWkl3b3nkG+iM8n8pQfJ4uVHdHH5uiNydgybCrGngN1N6mgi0y0e
        C5lrV7DwRACd8VbWppWs5nghqd7z+xodgvC2cuKUuMHjy17m52Vs6mMxx4vnOZcw29K0bjZs2LBhw4YN
        GzZs2LBhw4YNGzZs2LBhw4YNGzrw/zGOnh2DP5dmAAAAAElFTkSuQmCC
</value>
  </data>
</root>