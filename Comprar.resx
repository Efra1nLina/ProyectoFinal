<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="label5.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>